
/*--------------------------------------------------------------
**	User Defined Function definitions for example databases
**--------------------------------------------------------------
*/


DECLARE EXTERNAL FUNCTION IIF
	INTEGER, INTEGER, INTEGER
	RETURNS INTEGER
	ENTRY_POINT "iif" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION DIF
	INTEGER, DOUBLE PRECISION, DOUBLE PRECISION
	RETURNS DOUBLE PRECISION
	ENTRY_POINT "iif" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION SIF
	VARCHAR(255), VARCHAR (255)
	RETURNS CSTRING(255) FREE_IT
	ENTRY_POINT "sif" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION str_compare
	CSTRING(255), CSTRING(255)
	RETURNS INTEGER BY VALUE
	ENTRY_POINT "str_compare" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION str_trunc
	VARCHAR(255), SMALLINT
	RETURNS CSTRING(255)
	ENTRY_POINT "str_trunc" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION str_cat 
	CSTRING(255), CSTRING(255)
	RETURNS CSTRING(255) FREE_IT
	ENTRY_POINT "str_cat" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION str_cat3 
	CSTRING(255), CSTRING (255), CSTRING (255)
	RETURNS CSTRING(255) FREE_IT
	ENTRY_POINT "str_cat3" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION str_cat4 
	CSTRING(255), CSTRING (255), CSTRING (255), CSTRING (255)
	RETURNS CSTRING(255) FREE_IT
	ENTRY_POINT "str_cat4" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION str_cat5 
	CSTRING(255), CSTRING (255), CSTRING (255), CSTRING (255), CSTRING (255)
	RETURNS CSTRING(255) FREE_IT
	ENTRY_POINT "str_cat5" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION str_mid 
	CSTRING(255), SMALLINT, SMALLINT
	RETURNS CSTRING(255) FREE_IT
	ENTRY_POINT "str_mid" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION str_left 
	CSTRING(255), SMALLINT
	RETURNS CSTRING(255) FREE_IT
	ENTRY_POINT "str_left" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION str_right 
	VARCHAR(255), SMALLINT
	RETURNS CSTRING(255) FREE_IT
	ENTRY_POINT "str_right" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION BLOB_SUBSTR 
	BLOB, INTEGER, INTEGER 
	RETURNS CSTRING(255) FREE_IT
	ENTRY_POINT "blob_substr" MODULE_NAME "dy_udf";

/*binary functions*/

DECLARE EXTERNAL FUNCTION bit_and 
	INTEGER,INTEGER
	RETURNS INTEGER BY VALUE
	ENTRY_POINT "bit_and" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION bit_or
	INTEGER,INTEGER
	RETURNS INTEGER BY VALUE
	ENTRY_POINT "bit_or" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION bit_not
	INTEGER
	RETURNS INTEGER BY VALUE
	ENTRY_POINT "bit_not" MODULE_NAME "dy_udf";

/*round functions*/

DECLARE EXTERNAL FUNCTION round_curr
	DOUBLE PRECISION
	RETURNS DOUBLE PRECISION BY VALUE
	ENTRY_POINT "round_curr" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION round
	DOUBLE PRECISION, INTEGER
	RETURNS DOUBLE PRECISION BY VALUE
	ENTRY_POINT "round_float" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION round_ceil
	DOUBLE PRECISION, INTEGER
	RETURNS DOUBLE PRECISION BY VALUE
	ENTRY_POINT "round_float_ceil" MODULE_NAME "dy_udf";

/*debug functions*/

DECLARE EXTERNAL FUNCTION breakpoint
	CSTRING(255)
	RETURNS INTEGER BY VALUE
	ENTRY_POINT "debug_msg" MODULE_NAME "dy_udf";

/*application functions*/

DECLARE EXTERNAL FUNCTION name_fio
	CSTRING(255), CSTRING (255), CSTRING (255)
	RETURNS CSTRING(255)
	ENTRY_POINT "name_fio" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION name_full
	CSTRING(255), CSTRING (255), CSTRING (255)
	RETURNS CSTRING(255) FREE_IT
	ENTRY_POINT "name_full" MODULE_NAME "dy_udf";

/*sklad2 function*/

DECLARE EXTERNAL FUNCTION GET_DOC_NAME
	INTEGER, /*kind*/
	INTEGER, /*skind*/
	CSTRING (11), /*docno*/
	DATE, /*docdate*/
	DOUBLE PRECISION /*sum*/
	RETURNS CSTRING(50) FREE_IT
	ENTRY_POINT "get_doc_name" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION GET_PRODUCT_NAME
	CSTRING(51), /*name*/
	CSTRING(51), /*class*/
	CSTRING (51), /*produser*/
	CSTRING(11) /*len*/
	RETURNS CSTRING(100) FREE_IT
	ENTRY_POINT "get_product_name" MODULE_NAME "dy_udf";

DECLARE EXTERNAL FUNCTION GET_FULL_NAME
   	VARCHAR(200), /*full name*/
	VARCHAR(50) /*name*/
   	RETURNS CSTRING(200) FREE_IT
  	ENTRY_POINT "get_full_name"  MODULE_NAME "dy_udf"

/*other*/

DECLARE EXTERNAL FUNCTION SAFE_DIV
	DOUBLE PRECISION,
	DOUBLE PRECISION
	RETURNS DOUBLE PRECISION BY VALUE
	ENTRY_POINT 'safe_div' MODULE_NAME 'dy_udf'
