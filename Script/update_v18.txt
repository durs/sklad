SET TERM ^ ;

ALTER PROCEDURE QUERY_BOOK_IN (
    CLNTID INTEGER,
    FIRSTDATE TIMESTAMP,
    LASTDATE TIMESTAMP)
RETURNS (
    DOCID INTEGER,
    CLIENTID1 INTEGER,
    CLIENTID2 INTEGER,
    KIND INTEGER,
    SKIND INTEGER,
    DOCNO VARCHAR(10),
    DATE1 TIMESTAMP,
    DATE2 TIMESTAMP,
    SUM0 DOUBLE PRECISION,
    SUM1 DOUBLE PRECISION,
    SUM2 DOUBLE PRECISION,
    SUM10 DOUBLE PRECISION,
    SUM20 DOUBLE PRECISION,
    NDSSUM10 DOUBLE PRECISION,
    NDSSUM20 DOUBLE PRECISION)
AS
DECLARE VARIABLE NALOGSUM DOUBLE PRECISION;
BEGIN
  FOR SELECT D.DOCID, D.CLIENTID1, D.CLIENTID2, D.KIND, D.SKIND, D.DOCNO, D.DATE1, D.DATE2,
    D.SUM0, D.SUM1, D.SUM2
    FROM DOC D
    WHERE D.CLIENTID2 = :CLNTID AND D.KIND = 1 /*AND D.SKIND > 0*/
    AND D.DATE2 >= :FIRSTDATE AND D.DATE2 <= :LASTDATE
    ORDER BY D.DATE2, D.DOCNO
  INTO :DOCID, :CLIENTID1, :CLIENTID2, :KIND, :SKIND, :DOCNO, :DATE1, :DATE2, :SUM0, :SUM1, :SUM2
  DO BEGIN
    IF (SUM0 IS NULL) THEN SUM0 = 0;
    IF (SUM1 IS NULL) THEN SUM1 = 0;
    IF (SUM2 IS NULL) THEN SUM2 = 0;

    SELECT SUM(ROUND_CURR(DOC_PROD.PRICE * DOC_PROD.UNIT * DOC_PROD.CNT)), SUM(ROUND_CURR(DOC_PROD.NDSPRICE * DOC_PROD.UNIT * DOC_PROD.CNT)), SUM(DOC_PROD.NALOGSUM)
    FROM DOC_PROD
    LEFT JOIN PRODUCT ON PRODUCT.PRODID = DOC_PROD.PRODID
    WHERE DOC_PROD.DOCID = :DOCID AND PRODUCT.NDS = 10
    INTO :SUM10, :NDSSUM10, :NALOGSUM;
    IF (SUM10 IS NULL) THEN SUM10 = 0;
    IF (NDSSUM10 IS NULL) THEN NDSSUM10 = 0;
    /*IF (NALOGSUM IS NOT NULL) THEN SUM10 = SUM10 - NALOGSUM;*/
    SUM10 = SUM10 - NDSSUM10;

    SELECT SUM(ROUND_CURR(DOC_PROD.PRICE * DOC_PROD.UNIT * DOC_PROD.CNT)), SUM(ROUND_CURR(DOC_PROD.NDSPRICE * DOC_PROD.UNIT * DOC_PROD.CNT)), SUM(DOC_PROD.NALOGSUM)
    FROM DOC_PROD
    LEFT JOIN PRODUCT ON PRODUCT.PRODID = DOC_PROD.PRODID
    WHERE DOC_PROD.DOCID = :DOCID AND PRODUCT.NDS > 10
    INTO :SUM20, :NDSSUM20, :NALOGSUM;
    IF (SUM20 IS NULL) THEN SUM20 = 0;
    IF (NDSSUM20 IS NULL) THEN NDSSUM20 = 0;
    /*IF (NALOGSUM IS NOT NULL) THEN SUM20 = SUM20 - NALOGSUM;*/
    SUM20 = SUM20 - NDSSUM20;

    SUSPEND;
  END
END^

ALTER PROCEDURE QUERY_BOOK_OUT (
    CLNTID INTEGER,
    FIRSTDATE TIMESTAMP,
    LASTDATE TIMESTAMP)
RETURNS (
    DOCID INTEGER,
    CLIENTID1 INTEGER,
    CLIENTID2 INTEGER,
    KIND INTEGER,
    SKIND INTEGER,
    DOCNO VARCHAR(10),
    DATE1 TIMESTAMP,
    DATE2 TIMESTAMP,
    SUM0 DOUBLE PRECISION,
    SUM1 DOUBLE PRECISION,
    SUM2 DOUBLE PRECISION,
    SUM10 DOUBLE PRECISION,
    SUM20 DOUBLE PRECISION,
    NDSSUM10 DOUBLE PRECISION,
    NDSSUM20 DOUBLE PRECISION)
AS
DECLARE VARIABLE NALOGSUM DOUBLE PRECISION;
BEGIN
  FOR SELECT D.DOCID, D.CLIENTID1, D.CLIENTID2, D.KIND, D.SKIND, D.DOCNO, D.DATE1, D.DATE2,
    D.SUM0, D.SUM1, D.SUM2
    FROM DOC D
    WHERE D.CLIENTID1 = :CLNTID AND D.KIND = 1 /*AND D.SKIND>0*/
    AND D.DATE1 >= :FIRSTDATE AND D.DATE1 <= :LASTDATE
    ORDER BY D.DATE1, D.DOCNO
  INTO :DOCID, :CLIENTID1, :CLIENTID2, :KIND, :SKIND, :DOCNO, :DATE1, :DATE2, :SUM0, :SUM1, :SUM2
  DO BEGIN
    SELECT SUM(ROUND_CURR(DOC_PROD.PRICE * DOC_PROD.UNIT * DOC_PROD.CNT)), SUM(ROUND_CURR(DOC_PROD.NDSPRICE * DOC_PROD.UNIT * DOC_PROD.CNT)), SUM(DOC_PROD.NALOGSUM)
    FROM DOC_PROD
    LEFT JOIN PRODUCT ON PRODUCT.PRODID = DOC_PROD.PRODID
    WHERE DOC_PROD.DOCID = :DOCID AND PRODUCT.NDS = 10
    INTO :SUM10, :NDSSUM10, :NALOGSUM;
    IF (SUM10 IS NULL) THEN SUM10 = 0;
    IF (NDSSUM10 IS NULL) THEN NDSSUM10 = 0;
    IF (NALOGSUM IS NOT NULL) THEN SUM10 = SUM10 - NALOGSUM;
    SUM10 = SUM10 - NDSSUM10;

    SELECT SUM(ROUND_CURR(DOC_PROD.PRICE * DOC_PROD.UNIT * DOC_PROD.CNT)), SUM(ROUND_CURR(DOC_PROD.NDSPRICE * DOC_PROD.UNIT * DOC_PROD.CNT)), SUM(DOC_PROD.NALOGSUM)
    FROM DOC_PROD
    LEFT JOIN PRODUCT ON PRODUCT.PRODID = DOC_PROD.PRODID
    WHERE DOC_PROD.DOCID = :DOCID AND PRODUCT.NDS > 10
    INTO :SUM20, :NDSSUM20, :NALOGSUM;
    IF (SUM20 IS NULL) THEN SUM20 = 0;
    IF (NDSSUM20 IS NULL) THEN NDSSUM20 = 0;
    IF (NALOGSUM IS NOT NULL) THEN SUM20 = SUM20 - NALOGSUM;
    SUM20 = SUM20 - NDSSUM20;

    SUSPEND;
  END
END^

ALTER PROCEDURE QUERY_BOOK_INNER (
    CLNTID INTEGER,
    FIRSTDATE TIMESTAMP,
    LASTDATE TIMESTAMP)
RETURNS (
    CNT DOUBLE PRECISION,
    INSUM DOUBLE PRECISION,
    INNDSSUM DOUBLE PRECISION,
    INSUM10 DOUBLE PRECISION,
    INSUM20 DOUBLE PRECISION,
    INNDSSUM10 DOUBLE PRECISION,
    INNDSSUM20 DOUBLE PRECISION,
    OUTSUM DOUBLE PRECISION,
    OUTNDSSUM DOUBLE PRECISION,
    OUTNALOGSUM DOUBLE PRECISION,
    OUTSUM10 DOUBLE PRECISION,
    OUTSUM20 DOUBLE PRECISION,
    OUTNDSSUM10 DOUBLE PRECISION,
    OUTNDSSUM20 DOUBLE PRECISION)
AS
DECLARE VARIABLE NALOGSUM DOUBLE PRECISION;
BEGIN

  SELECT SUM(DOC_PROD.UNIT * DOC_PROD.CNT),
    SUM(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.INPRICE), SUM(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.INNDSPRICE),
    SUM(ROUND_CURR(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.PRICE)), SUM(ROUND_CURR(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.NDSPRICE)), SUM(DOC_PROD.NALOGSUM)
  FROM DOC
  JOIN DOC_PROD ON DOC_PROD.DOCID = DOC.DOCID
  WHERE DOC.CLIENTID1 = :CLNTID
  AND DOC.DATE2 >= :FIRSTDATE AND DOC.DATE2 <= :LASTDATE
  AND DOC.KIND = 1 AND DOC.SKIND <= 0     
  INTO :CNT, :INSUM, :INNDSSUM, :OUTSUM, :OUTNDSSUM, :OUTNALOGSUM;
  IF (CNT IS NULL) THEN CNT = 0;
  IF (INSUM IS NULL) THEN INSUM = 0;
  IF (INNDSSUM IS NULL) THEN INNDSSUM = 0;
  IF (OUTSUM IS NULL) THEN OUTSUM = 0;
  IF (OUTNDSSUM IS NULL) THEN OUTNDSSUM = 0;
  IF (OUTNALOGSUM IS NULL) THEN OUTNALOGSUM = 0;

  SELECT 
    SUM(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.INPRICE), SUM(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.INNDSPRICE),
    SUM(ROUND_CURR(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.PRICE)), SUM(ROUND_CURR(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.NDSPRICE)),
    SUM(DOC_PROD.NALOGSUM)
  FROM DOC
  JOIN DOC_PROD ON DOC_PROD.DOCID = DOC.DOCID
  LEFT JOIN PRODUCT ON PRODUCT.PRODID = DOC_PROD.PRODID
  WHERE DOC.CLIENTID1 = :CLNTID
  AND DOC.DATE2 >= :FIRSTDATE AND DOC.DATE2 <= :LASTDATE
  AND DOC.KIND = 1 AND DOC.SKIND <= 0     
  AND PRODUCT.NDS = 10
  INTO :INSUM10, :INNDSSUM10, :OUTSUM10, :OUTNDSSUM10, :NALOGSUM;
  IF (INSUM10 IS NULL) THEN INSUM10 = 0;
  IF (INNDSSUM10 IS NULL) THEN INNDSSUM10 = 0;
  IF (OUTSUM10 IS NULL) THEN OUTSUM10 = 0;
  IF (OUTNDSSUM10 IS NULL) THEN OUTNDSSUM10 = 0;
  IF (NALOGSUM IS NOT NULL) THEN OUTSUM10 = OUTSUM10 - NALOGSUM;
  INSUM10 = INSUM10-INNDSSUM10;
  OUTSUM10 = OUTSUM10-OUTNDSSUM10;

  SELECT
    SUM(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.INPRICE), SUM(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.INNDSPRICE),
    SUM(ROUND_CURR(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.PRICE)), SUM(ROUND_CURR(DOC_PROD.UNIT * DOC_PROD.CNT * DOC_PROD.NDSPRICE)),
    SUM(DOC_PROD.NALOGSUM)
  FROM DOC
  JOIN DOC_PROD ON DOC_PROD.DOCID = DOC.DOCID
  LEFT JOIN PRODUCT ON PRODUCT.PRODID = DOC_PROD.PRODID
  WHERE DOC.CLIENTID1 = :CLNTID
  AND DOC.DATE2 >= :FIRSTDATE AND DOC.DATE2 <= :LASTDATE
  AND DOC.KIND = 1 AND DOC.SKIND <= 0     
  AND PRODUCT.NDS > 10
  INTO :INSUM20, :INNDSSUM20, :OUTSUM20, :OUTNDSSUM20, :NALOGSUM;
  IF (INSUM20 IS NULL) THEN INSUM20 = 0;
  IF (INNDSSUM20 IS NULL) THEN INNDSSUM20 = 0;
  IF (OUTSUM20 IS NULL) THEN OUTSUM20 = 0;
  IF (OUTNDSSUM20 IS NULL) THEN OUTNDSSUM20 = 0;
  IF (NALOGSUM IS NOT NULL) THEN OUTSUM20 = OUTSUM20 - NALOGSUM;
  INSUM20 = INSUM20 - INNDSSUM20;
  OUTSUM20 = OUTSUM20 - OUTNDSSUM20;

  IF (CNT <> 0) THEN SUSPEND;
END^

ALTER PROCEDURE QUERY_BOOK_IN_INNER (
    CLNTID INTEGER,
    FIRSTDATE TIMESTAMP,
    LASTDATE TIMESTAMP)
RETURNS (
    SUM0 DOUBLE PRECISION,
    SUM1 DOUBLE PRECISION,
    SUM2 DOUBLE PRECISION,
    SUM10 DOUBLE PRECISION,
    SUM20 DOUBLE PRECISION,
    NDSSUM10 DOUBLE PRECISION,
    NDSSUM20 DOUBLE PRECISION)
AS
begin

  select sum(inprod.price*outprod.unit*outprod.cnt), sum(inprod.ndsprice*outprod.unit*outprod.cnt)
  from doc indoc
  join doc_prod inprod on inprod.docid = indoc.docid
  left join doc_prod outprod on outprod.indocid = inprod.docid and outprod.inrecid=inprod.recid
  left join doc outdoc on outdoc.docid = outprod.docid
  where indoc.clientid2 = :clntid
  and indoc.date2 >= :firstdate and indoc.date2 <= :lastdate
  and outdoc.kind = 1 and outdoc.skind <= 0
  into :sum0, :sum1;
  if (sum0 is null) then sum0 = 0;
  if (sum1 is null) then sum1 = 0;
  sum2 = 0;

  select sum(inprod.price*outprod.unit*outprod.cnt), sum(inprod.ndsprice*outprod.unit*outprod.cnt)
  from doc indoc
  join doc_prod inprod on inprod.docid=indoc.docid
  left join doc_prod outprod on outprod.indocid=inprod.docid and outprod.inrecid=inprod.recid
  left join doc outdoc on outdoc.docid=outprod.docid
  left join product on product.prodid=inprod.prodid
  where indoc.clientid2=:clntid 
  and indoc.date2>=:firstdate and indoc.date2<=:lastdate
  and outdoc.kind=1 and outdoc.skind<=0
  and product.nds=10
  into :sum10,:ndssum10;
  if (sum10 is null) then sum10=0;
  if (ndssum10 is null) then ndssum10=0;
  sum10=sum10-ndssum10;

  select sum(inprod.price*outprod.unit*outprod.cnt), sum(inprod.ndsprice*outprod.unit*outprod.cnt)
  from doc indoc
  join doc_prod inprod on inprod.docid=indoc.docid
  left join doc_prod outprod on outprod.indocid=inprod.docid and outprod.inrecid=inprod.recid
  left join doc outdoc on outdoc.docid=outprod.docid
  left join product on product.prodid=inprod.prodid
  where indoc.clientid2=:clntid 
  and indoc.date2>=:firstdate and indoc.date2<=:lastdate
  and outdoc.kind=1 and outdoc.skind<=0
  and product.nds > 10
  into :sum20,:ndssum20;
  if (sum20 is null) then sum20=0;
  if (ndssum20 is null) then ndssum20=0;
  sum20=sum20-ndssum20;

  if (sum0<>0) then suspend;
end^

SET TERM ;^

COMMIT WORK;
EXECUTE PROCEDURE GET_VERSION(1);
COMMIT WORK;