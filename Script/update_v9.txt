SET TERM ---;

DROP PROCEDURE EXPORT_PRODUCT
---

CREATE PROCEDURE EXPORT_PRODUCT (
  CLIENTID1 INTEGER,
  CLIENTID2 INTEGER,
  INDOCID INTEGER,
  INRECID INTEGER,
  CNT DOUBLE PRECISION,
  UNIT DOUBLE PRECISION
) RETURNS (
  DOCID INTEGER,
  RECID INTEGER,
  PRICE DOUBLE PRECISION,
  NDSPRICE DOUBLE PRECISION
) AS
DECLARE VARIABLE PRODID INTEGER;
DECLARE VARIABLE PARAM1 INTEGER;
DECLARE VARIABLE PER DOUBLE PRECISION;
DECLARE VARIABLE PRICEPER DOUBLE PRECISION;
DECLARE VARIABLE PRICERND INTEGER;
DECLARE VARIABLE INUNIT DOUBLE PRECISION;
DECLARE VARIABLE NDS DOUBLE PRECISION;
DECLARE VARIABLE INOUTPRICE DOUBLE PRECISION;
DECLARE VARIABLE INPRICE DOUBLE PRECISION;
DECLARE VARIABLE NEWPRICE DOUBLE PRECISION;
DECLARE VARIABLE INNDSPRICE DOUBLE PRECISION;
DECLARE VARIABLE SUM0 DOUBLE PRECISION;
DECLARE VARIABLE SUM1 DOUBLE PRECISION;
BEGIN
  FOR SELECT DOCID, PARAM1, PARAM2 FROM DOC 
    WHERE CLIENTID1 = :CLIENTID1 AND CLIENTID2 = :CLIENTID2 AND KIND = 1 AND SKIND = -1
    INTO :DOCID, :PARAM1, :PER
  DO RECID = NULL;

  IF (DOCID IS NULL) THEN BEGIN
    SELECT DOCPARAM1, DOCPARAM2 FROM SKLAD WHERE CLIENTID = :CLIENTID1 INTO :PARAM1, :PER;
    DOCID = GEN_ID(GENDOCID,1);
    INSERT INTO DOC (DOCID, CLIENTID1, CLIENTID2, KIND, SKIND, PARAM1, PARAM2, SUM0, SUM1, SUM2)
    VALUES (:DOCID, :CLIENTID1, :CLIENTID2, 1, -1, :PARAM1, :PER, 0, 0, 0);
  END 
  ELSE BEGIN
    SELECT RECID, UNIT, PRICE, NDSPRICE FROM DOC_PROD 
    WHERE DOCID = :DOCID AND INDOCID = :INDOCID AND INRECID = :INRECID
    INTO :RECID, :INUNIT, :PRICE, :NDSPRICE;
  END

  IF (RECID IS NULL) THEN BEGIN
    IF (PARAM1 IS NULL) THEN PARAM1 = 0;
    IF (PER IS NULL) THEN PER = 0;

    SELECT PRICE_PERCENT, PRICE_ROUND FROM SKLAD WHERE CLIENTID = :CLIENTID2 INTO :PRICEPER, :PRICERND;
    IF (PRICEPER IS NULL) THEN PRICEPER = 0;
    IF (PRICERND IS NULL OR PRICERND = 0) THEN PRICERND = 100;  

    SELECT PRODID, UNIT, PRICE, NEWPRICE, NDSPRICE FROM DOC_PROD
    WHERE DOCID = :INDOCID AND RECID = :INRECID
    INTO :PRODID, :INUNIT, :INPRICE, :INOUTPRICE, :INNDSPRICE;
    IF (PRODID IS NULL) THEN EXCEPTION E_OST_NOTFOUND;

    NDS = 0;
    SELECT NDS FROM PRODUCT WHERE PRODID = :PRODID INTO :NDS;

    SELECT MAX(RECID) + 10 FROM DOC_PROD WHERE DOCID = :DOCID INTO :RECID;
    IF (RECID IS NULL) THEN RECID = 10;

    CNT = CNT * (UNIT / INUNIT);
    IF (BIT_AND(PARAM1, 4) = 4) /*check in price*/
      THEN PRICE = ROUND_CURR(INPRICE * (1 + PER / 100));
      ELSE PRICE = ROUND_CURR(INOUTPRICE * (1 + PER / 100));
    IF (BIT_AND(PARAM1, 2) = 2) /*check nds*/
      THEN NDSPRICE = PRICE * (NDS / (100 + NDS));
      ELSE NDSPRICE = 0;
    NEWPRICE = ROUND_CEIL(PRICE * (1 + PRICEPER / 100), PRICERND);

    INSERT INTO DOC_PROD (DOCID, RECID, INDOCID, INRECID, PRODID, CNT, UNIT, INPRICE, INNDSPRICE, OUTPRICE, PRICE, NDSPRICE, NALOGSUM, NEWPRICE)
    VALUES (:DOCID, :RECID, :INDOCID, :INRECID, :PRODID, :CNT, :INUNIT, :INPRICE, :INNDSPRICE, :INOUTPRICE, :PRICE, :NDSPRICE, 0, :NEWPRICE);
  END 
  ELSE BEGIN
    CNT = CNT * (UNIT / INUNIT);
    UPDATE DOC_PROD SET CNT = CNT + :CNT
    WHERE DOCID = :DOCID AND RECID = :RECID;
  END
  SUM0 = ROUND_CURR(CNT * INUNIT * PRICE);
  SUM1 = ROUND_CURR(CNT * INUNIT * NDSPRICE);
  UPDATE DOC SET SUM0 = SUM0 + :SUM0, SUM1 = SUM1 + :SUM1 WHERE DOCID = :DOCID;
END
---

SET TERM ;---

COMMIT WORK;
EXECUTE PROCEDURE GET_VERSION(1);
COMMIT WORK;


SET TERM ---;

CREATE PROCEDURE CORRECT_PRICE (
  F INTEGER
) RETURNS (
  DOCID INTEGER,
  RECID INTEGER,
  PRICE DOUBLE PRECISION,
  NDSPRICE DOUBLE PRECISION,
  INPRICE DOUBLE PRECISION,
  INNDSPRICE DOUBLE PRECISION
) AS       
BEGIN
  FOR SELECT DOCID, RECID, PRICE, NDSPRICE FROM DOC_PROD INTO :DOCID, :RECID, :PRICE, :NDSPRICE
  DO BEGIN
    IF (F IS NOT NULL) THEN 
      FOR SELECT INPRICE, INNDSPRICE  
      FROM DOC_PROD 
      WHERE INDOCID = :DOCID AND INRECID = :RECID
      INTO :INPRICE, :INNDSPRICE
      DO BEGIN
        IF (PRICE <> INPRICE OR NDSPRICE <> INNDSPRICE) THEN SUSPEND;
      END
    ELSE
      UPDATE DOC_PROD SET INPRICE = :PRICE, INNDSPRICE = :NDSPRICE
      WHERE INDOCID = :DOCID AND INRECID = :RECID;
  END
END
---

SET TERM ;---

COMMIT WORK;