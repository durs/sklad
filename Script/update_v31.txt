ALTER TABLE CLIENT 
ADD REASON_PKO TYPE_STR100,
ADD REASON_RKO TYPE_STR100;

SET TERM ^ ;
ALTER PROCEDURE UPDATE_OSTATOK_PRICE (
    CLIENTID INTEGER,
    PER DOUBLE PRECISION,
    FINPRICE INTEGER,
    PRICEINFO INTEGER)
AS
DECLARE VARIABLE PRICERND INTEGER;
DECLARE VARIABLE PRICERND2 INTEGER;
DECLARE VARIABLE PRICERND3 INTEGER;
DECLARE VARIABLE PRICERND4 INTEGER;
DECLARE VARIABLE PRICERND5 INTEGER;
DECLARE VARIABLE DOCID INTEGER;
DECLARE VARIABLE RECID INTEGER;
DECLARE VARIABLE INPRICE DOUBLE PRECISION;
DECLARE VARIABLE NEWPRICE DOUBLE PRECISION;
DECLARE VARIABLE NEWPRICE2 DOUBLE PRECISION;
DECLARE VARIABLE NEWPRICE3 DOUBLE PRECISION;
DECLARE VARIABLE NEWPRICE4 DOUBLE PRECISION;
DECLARE VARIABLE NEWPRICE5 DOUBLE PRECISION;
DECLARE VARIABLE PRODID INTEGER;
DECLARE VARIABLE PRICE DOUBLE PRECISION;
DECLARE VARIABLE PRICE2 DOUBLE PRECISION;
DECLARE VARIABLE PRICE3 DOUBLE PRECISION;
DECLARE VARIABLE PRICE4 DOUBLE PRECISION;
DECLARE VARIABLE PRICE5 DOUBLE PRECISION;
BEGIN
  SELECT PRICE_ROUND, PRICE_ROUND2, PRICE_ROUND3, PRICE_ROUND4, PRICE_ROUND5
  FROM SKLAD WHERE CLIENTID=:CLIENTID
  INTO :PRICERND, :PRICERND2, :PRICERND3, :PRICERND4, :PRICERND5;
  IF (PRICERND IS NULL OR PRICERND = 0) THEN PRICERND = 100;
  IF (PRICERND2 IS NULL OR PRICERND2 = 0) THEN PRICERND2 = 100;
  IF (PRICERND3 IS NULL OR PRICERND3 = 0) THEN PRICERND3 = 100;
  IF (PRICERND4 IS NULL OR PRICERND4 = 0) THEN PRICERND4 = 100;
  IF (PRICERND5 IS NULL OR PRICERND5 = 0) THEN PRICERND5 = 100;
  IF (FINPRICE IS NULL) THEN FINPRICE = 0;
  
  FOR SELECT DOC_PROD.DOCID, DOC_PROD.RECID, DOC_PROD.PRODID, DOC_PROD.PRICE, DOC_PROD.NEWPRICE, DOC_PROD.NEWPRICE2, DOC_PROD.NEWPRICE3, DOC_PROD.NEWPRICE4, DOC_PROD.NEWPRICE5
  FROM DOC_PROD
  INNNER JOIN DOC ON DOC.DOCID = DOC_PROD.DOCID AND DOC.CLIENTID2 = :CLIENTID AND DOC.KIND = 1
  WHERE DOC_PROD.KIND = 0
  INTO :DOCID, :RECID, :PRODID, :INPRICE, :NEWPRICE, :NEWPRICE2, :NEWPRICE3, :NEWPRICE4, :NEWPRICE5
  DO BEGIN

    IF (FINPRICE = 2) THEN BEGIN
        SELECT PRICE, PRICE2, PRICE3, PRICE4, PRICE5 FROM PRODUCT WHERE PRODID=:PRODID
        INTO :PRICE, :PRICE2, :PRICE3, :PRICE4, :PRICE5;
    END ELSE IF (FINPRICE <> 0) THEN BEGIN
        PRICE = INPRICE; PRICE2 = INPRICE; PRICE3 = INPRICE; PRICE4 = INPRICE; PRICE5 = INPRICE;
    END ELSE BEGIN
        PRICE = NEWPRICE; PRICE2 = NEWPRICE2; PRICE3 = NEWPRICE3; PRICE4 = NEWPRICE4; PRICE5 = NEWPRICE5;
    END

    IF (BIT_AND(PRICEINFO, 1) <> 0 AND PRICE>0) THEN NEWPRICE = ROUND_CEIL(PRICE * ((100 + PER) / 100), PRICERND);
    IF (BIT_AND(PRICEINFO, 2) <> 0 AND PRICE2>0) THEN NEWPRICE2 = ROUND_CEIL(PRICE2 * ((100 + PER) / 100), PRICERND2);
    IF (BIT_AND(PRICEINFO, 4) <> 0 AND PRICE3>0) THEN NEWPRICE3 = ROUND_CEIL(PRICE3 * ((100 + PER) / 100), PRICERND3);
    IF (BIT_AND(PRICEINFO, 8) <> 0 AND PRICE4>0) THEN NEWPRICE4 = ROUND_CEIL(PRICE4 * ((100 + PER) / 100), PRICERND4);
    IF (BIT_AND(PRICEINFO, 16) <> 0 AND PRICE5>0) THEN NEWPRICE5 = ROUND_CEIL(PRICE5 * ((100 + PER) / 100), PRICERND5);

    UPDATE DOC_PROD SET NEWPRICE = :NEWPRICE, NEWPRICE2 = :NEWPRICE2, NEWPRICE3 = :NEWPRICE3, NEWPRICE4 = :NEWPRICE4, NEWPRICE5 = :NEWPRICE5
    WHERE DOCID = :DOCID AND RECID = :RECID;
  END
END^

SET TERM ; ^
COMMIT WORK;
EXECUTE PROCEDURE GET_VERSION(1);
COMMIT WORK;
