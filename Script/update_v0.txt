CREATE GENERATOR GENVER;
SET GENERATOR GENVER TO 0;

SET TERM ---;

CREATE PROCEDURE GET_VERSION (
  INCR INTEGER
) RETURNS (
  ID INTEGER
) AS BEGIN
  IF (INCR IS NULL) THEN INCR=0;
  ID=GEN_ID(GENVER,INCR);
END
---

CREATE PROCEDURE QUERY_BOOK_IN_INNER (
  CLNTID INTEGER,
  FIRSTDATE DATE,
  LASTDATE DATE
) RETURNS (
  SUM0 DOUBLE PRECISION,
  SUM1 DOUBLE PRECISION,
  SUM2 DOUBLE PRECISION,
  SUM10 DOUBLE PRECISION,
  SUM20 DOUBLE PRECISION,
  NDSSUM10 DOUBLE PRECISION,
  NDSSUM20 DOUBLE PRECISION
) AS   BEGIN

  SELECT SUM(INPROD.PRICE*OUTPROD.UNIT*OUTPROD.CNT), SUM(INPROD.NDSPRICE*OUTPROD.UNIT*OUTPROD.CNT)
  FROM DOC INDOC
  JOIN DOC_PROD INPROD ON INPROD.DOCID=INDOC.DOCID
  LEFT JOIN DOC_PROD OUTPROD ON OUTPROD.INDOCID=INPROD.DOCID AND OUTPROD.INRECID=INPROD.RECID
  LEFT JOIN DOC OUTDOC ON OUTDOC.DOCID=OUTPROD.DOCID
  WHERE INDOC.CLIENTID2=:CLNTID 
  AND INDOC.DATE2>=:FIRSTDATE AND INDOC.DATE2<=:LASTDATE
  AND OUTDOC.KIND=1 AND OUTDOC.SKIND<=0
  INTO :SUM0, :SUM1;
  IF (SUM0 IS NULL) THEN SUM0=0;
  IF (SUM1 IS NULL) THEN SUM1=0;
  SUM2=0;

  SELECT SUM(INPROD.PRICE*OUTPROD.UNIT*OUTPROD.CNT), SUM(INPROD.NDSPRICE*OUTPROD.UNIT*OUTPROD.CNT)
  FROM DOC INDOC
  JOIN DOC_PROD INPROD ON INPROD.DOCID=INDOC.DOCID
  LEFT JOIN DOC_PROD OUTPROD ON OUTPROD.INDOCID=INPROD.DOCID AND OUTPROD.INRECID=INPROD.RECID
  LEFT JOIN DOC OUTDOC ON OUTDOC.DOCID=OUTPROD.DOCID
  LEFT JOIN PRODUCT ON PRODUCT.PRODID=INPROD.PRODID
  WHERE INDOC.CLIENTID2=:CLNTID 
  AND INDOC.DATE2>=:FIRSTDATE AND INDOC.DATE2<=:LASTDATE
  AND OUTDOC.KIND=1 AND OUTDOC.SKIND<=0
  AND PRODUCT.NDS=10
  INTO :SUM10,:NDSSUM10;
  IF (SUM10 IS NULL) THEN SUM10=0;
  IF (NDSSUM10 IS NULL) THEN NDSSUM10=0;
  SUM10=SUM10-NDSSUM10;

  SELECT SUM(INPROD.PRICE*OUTPROD.UNIT*OUTPROD.CNT), SUM(INPROD.NDSPRICE*OUTPROD.UNIT*OUTPROD.CNT)
  FROM DOC INDOC
  JOIN DOC_PROD INPROD ON INPROD.DOCID=INDOC.DOCID
  LEFT JOIN DOC_PROD OUTPROD ON OUTPROD.INDOCID=INPROD.DOCID AND OUTPROD.INRECID=INPROD.RECID
  LEFT JOIN DOC OUTDOC ON OUTDOC.DOCID=OUTPROD.DOCID
  LEFT JOIN PRODUCT ON PRODUCT.PRODID=INPROD.PRODID
  WHERE INDOC.CLIENTID2=:CLNTID 
  AND INDOC.DATE2>=:FIRSTDATE AND INDOC.DATE2<=:LASTDATE
  AND OUTDOC.KIND=1 AND OUTDOC.SKIND<=0
  AND PRODUCT.NDS=20
  INTO :SUM20,:NDSSUM20;
  IF (SUM20 IS NULL) THEN SUM20=0;
  IF (NDSSUM20 IS NULL) THEN NDSSUM20=0;
  SUM20=SUM20-NDSSUM20;

  IF (SUM0<>0) THEN SUSPEND;
END
---

ALTER PROCEDURE QUERY_BOOK_IN (
  CLNTID INTEGER,
  FIRSTDATE DATE,
  LASTDATE DATE
) RETURNS (
  DOCID INTEGER,
  CLIENTID1 INTEGER,
  CLIENTID2 INTEGER,
  KIND INTEGER,
  SKIND INTEGER,
  DOCNO VARCHAR(10),
  DATE1 DATE,
  DATE2 DATE,
  SUM0 DOUBLE PRECISION,
  SUM1 DOUBLE PRECISION,
  SUM2 DOUBLE PRECISION,
  SUM10 DOUBLE PRECISION,
  SUM20 DOUBLE PRECISION,
  NDSSUM10 DOUBLE PRECISION,
  NDSSUM20 DOUBLE PRECISION
) AS                                                               
DECLARE VARIABLE NALOGSUM DOUBLE PRECISION;                                       
BEGIN
  FOR SELECT D.DOCID,D.CLIENTID1,D.CLIENTID2,D.KIND,D.SKIND,D.DOCNO,D.DATE1,D.DATE2,
    D.SUM0,D.SUM1,D.SUM2
    FROM DOC D
    WHERE D.CLIENTID2=:CLNTID AND D.KIND=1 /*AND D.SKIND>0*/
    AND D.DATE2>=:FIRSTDATE AND D.DATE2<=:LASTDATE
    ORDER BY D.DATE2,D.DOCID
  INTO :DOCID,:CLIENTID1,:CLIENTID2,:KIND,:SKIND,:DOCNO,:DATE1,:DATE2,:SUM0,:SUM1,:SUM2
  DO BEGIN
    IF (SUM0 IS NULL) THEN SUM0=0;
    IF (SUM1 IS NULL) THEN SUM1=0;
    IF (SUM2 IS NULL) THEN SUM2=0;

    SELECT SUM(DOC_PROD.PRICE*DOC_PROD.UNIT*DOC_PROD.CNT),SUM(DOC_PROD.NDSPRICE*DOC_PROD.UNIT*DOC_PROD.CNT),SUM(DOC_PROD.NALOGSUM)
    FROM DOC_PROD
    LEFT JOIN PRODUCT ON PRODUCT.PRODID=DOC_PROD.PRODID
    WHERE DOC_PROD.DOCID=:DOCID AND PRODUCT.NDS=10
    INTO :SUM10,:NDSSUM10,:NALOGSUM;
    IF (SUM10 IS NULL) THEN SUM10=0;
    IF (NDSSUM10 IS NULL) THEN NDSSUM10=0;
    IF (NALOGSUM IS NOT NULL) THEN SUM10=SUM10-NALOGSUM;
    SUM10=SUM10-NDSSUM10;

    SELECT SUM(DOC_PROD.PRICE*DOC_PROD.UNIT*DOC_PROD.CNT),SUM(DOC_PROD.NDSPRICE*DOC_PROD.UNIT*DOC_PROD.CNT),SUM(DOC_PROD.NALOGSUM)
    FROM DOC_PROD
    LEFT JOIN PRODUCT ON PRODUCT.PRODID=DOC_PROD.PRODID
    WHERE DOC_PROD.DOCID=:DOCID AND PRODUCT.NDS=20
    INTO :SUM20,:NDSSUM20,:NALOGSUM;
    IF (SUM20 IS NULL) THEN SUM20=0;
    IF (NDSSUM20 IS NULL) THEN NDSSUM20=0;
    IF (NALOGSUM IS NOT NULL) THEN SUM20=SUM20-NALOGSUM;
    SUM20=SUM20-NDSSUM20;

    SUSPEND;
  END
END
---

ALTER PROCEDURE QUERY_BOOK_OUT (
  CLNTID INTEGER,
  FIRSTDATE DATE,
  LASTDATE DATE
) RETURNS (
  DOCID INTEGER,
  CLIENTID1 INTEGER,
  CLIENTID2 INTEGER,
  KIND INTEGER,
  SKIND INTEGER,
  DOCNO VARCHAR(10),
  DATE1 DATE,
  DATE2 DATE,
  SUM0 DOUBLE PRECISION,
  SUM1 DOUBLE PRECISION,
  SUM2 DOUBLE PRECISION,
  SUM10 DOUBLE PRECISION,
  SUM20 DOUBLE PRECISION,
  NDSSUM10 DOUBLE PRECISION,
  NDSSUM20 DOUBLE PRECISION
) AS                                                           
DECLARE VARIABLE NALOGSUM DOUBLE PRECISION;                                       
BEGIN
  FOR SELECT D.DOCID,D.CLIENTID1,D.CLIENTID2,D.KIND,D.SKIND,D.DOCNO,D.DATE1,D.DATE2,
    D.SUM0,D.SUM1,D.SUM2
    FROM DOC D
    WHERE D.CLIENTID1=:CLNTID AND D.KIND=1 AND D.SKIND>0
    AND D.DATE1>=:FIRSTDATE AND D.DATE1<=:LASTDATE
    ORDER BY D.DATE1,D.DOCID
  INTO :DOCID,:CLIENTID1,:CLIENTID2,:KIND,:SKIND,:DOCNO,:DATE1,:DATE2,:SUM0,:SUM1,:SUM2
  DO BEGIN
    SELECT SUM(DOC_PROD.PRICE*DOC_PROD.UNIT*DOC_PROD.CNT),SUM(DOC_PROD.NDSPRICE*DOC_PROD.UNIT*DOC_PROD.CNT),SUM(DOC_PROD.NALOGSUM)
    FROM DOC_PROD
    LEFT JOIN PRODUCT ON PRODUCT.PRODID=DOC_PROD.PRODID
    WHERE DOC_PROD.DOCID=:DOCID AND PRODUCT.NDS=10
    INTO :SUM10,:NDSSUM10,:NALOGSUM;
    IF (SUM10 IS NULL) THEN SUM10=0;
    IF (NDSSUM10 IS NULL) THEN NDSSUM10=0;
    IF (NALOGSUM IS NOT NULL) THEN SUM10=SUM10-NALOGSUM;
    SUM10=SUM10-NDSSUM10;

    SELECT SUM(DOC_PROD.PRICE*DOC_PROD.UNIT*DOC_PROD.CNT),SUM(DOC_PROD.NDSPRICE*DOC_PROD.UNIT*DOC_PROD.CNT),SUM(DOC_PROD.NALOGSUM)
    FROM DOC_PROD
    LEFT JOIN PRODUCT ON PRODUCT.PRODID=DOC_PROD.PRODID
    WHERE DOC_PROD.DOCID=:DOCID AND PRODUCT.NDS=20
    INTO :SUM20,:NDSSUM20,:NALOGSUM;
    IF (SUM20 IS NULL) THEN SUM20=0;
    IF (NDSSUM20 IS NULL) THEN NDSSUM20=0;
    IF (NALOGSUM IS NOT NULL) THEN SUM20=SUM20-NALOGSUM;
    SUM20=SUM20-NDSSUM20;

    SUSPEND;
  END
END
---

ALTER PROCEDURE QUERY_OSTATOK2 (
  CLIENTID INTEGER,
  FIRSTDOCDATE DATE,
  FIRSTDATE DATE,
  LASTDATE DATE
) RETURNS (
  INDOCID INTEGER,
  INRECID INTEGER,
  PRODID INTEGER,
  INCNT DOUBLE PRECISION,
  OUTCNT DOUBLE PRECISION,
  CNT DOUBLE PRECISION,
  VCNT DOUBLE PRECISION,
  UNIT DOUBLE PRECISION,
  INPRICE DOUBLE PRECISION,
  INNDSPRICE DOUBLE PRECISION,
  OUTPRICE NUMERIC(15, 2),
  OUTSUM NUMERIC(15, 2),
  OUTNDSSUM NUMERIC(15, 2),
  OUTNALOGSUM NUMERIC(15, 2),
  ISOST SMALLINT
) AS                                                                                                                                                                  
  DECLARE VARIABLE E DOUBLE PRECISION;
  DECLARE VARIABLE KIND INTEGER;
  DECLARE VARIABLE RCNT DOUBLE PRECISION;
  DECLARE VARIABLE INNERCNT DOUBLE PRECISION;
  DECLARE VARIABLE PRICE DOUBLE PRECISION;
  DECLARE VARIABLE NDSPRICE DOUBLE PRECISION;
  DECLARE VARIABLE DATE1 DATE;
BEGIN
  E=0.00001;
  SELECT KIND FROM SKLAD WHERE CLIENTID=:CLIENTID INTO :KIND;
  IF (KIND IS NULL) THEN KIND=0;

  FOR SELECT DOC.DATE1, DOC_PROD.DOCID, DOC_PROD.RECID, DOC_PROD.PRODID,
    DOC_PROD.CNT, DOC_PROD.UNIT, 
    DOC_PROD.INPRICE, DOC_PROD.INNDSPRICE, DOC_PROD.PRICE, DOC_PROD.NDSPRICE, DOC_PROD.NEWPRICE
    FROM DOC,DOC_PROD
    WHERE DOC.CLIENTID2=:CLIENTID AND DOC.KIND=1
    AND (:FIRSTDOCDATE IS NULL OR DOC.DATE1>=:FIRSTDOCDATE) AND (:LASTDATE IS NULL OR DOC.DATE1<=:LASTDATE)
    AND DOC_PROD.DOCID=DOC.DOCID
    ORDER BY 1,2,3,4
    INTO :DATE1, :INDOCID, :INRECID, :PRODID, :INCNT, :UNIT, :INPRICE, :INNDSPRICE, :PRICE, :NDSPRICE, :OUTPRICE
  DO IF (INCNT>=0 OR DATE1>=FIRSTDATE) THEN BEGIN
    IF (KIND<>1) THEN BEGIN
      INPRICE=:PRICE;
      INNDSPRICE=:NDSPRICE;
    END
    IF (DATE1<FIRSTDATE) THEN ISOST=1; ELSE ISOST=0;

    /*get vozvrat count*/
    IF (FIRSTDATE IS NOT NULL) THEN 
      SELECT SUM(DOC_PROD.CNT*DOC_PROD.UNIT)
      FROM DOC_PROD
      LEFT JOIN DOC ON DOC.DOCID=DOC_PROD.DOCID
      WHERE DOC_PROD.PDOCID=:INDOCID AND DOC_PROD.PRECID=:INRECID
      AND (DOC.DATE1<:FIRSTDATE) AND DOC.KIND=1
      INTO :VCNT;
    ELSE VCNT=0;
    IF (VCNT IS NULL) THEN VCNT=0; ELSE VCNT=VCNT/UNIT;

    /*get inner release count*/
    /*must be deleted
    SELECT SUM(DOC_PROD.CNT*DOC_PROD.UNIT)
      FROM DOC_PROD
      LEFT JOIN DOC ON DOC.DOCID=DOC_PROD.DOCID
      WHERE DOC_PROD.INDOCID=:INDOCID AND DOC_PROD.INRECID=:INRECID
      AND DOC.KIND=1 AND DOC.SKIND<=0
      INTO :INNERCNT;
    IF (INNERCNT IS NULL) THEN INNERCNT=0; ELSE INNERCNT=INNERCNT/UNIT;
    */

    /*get all release count*/
    SELECT SUM(DOC_PROD.CNT*DOC_PROD.UNIT)
      FROM DOC_PROD
      LEFT JOIN DOC ON DOC.DOCID=DOC_PROD.DOCID
      WHERE DOC_PROD.INDOCID=:INDOCID AND DOC_PROD.INRECID=:INRECID
      AND (:LASTDATE IS NULL OR DOC.DATE1<=:LASTDATE) 
      AND DOC.KIND=1 
      INTO :RCNT;
    IF (RCNT IS NULL) THEN RCNT=0; ELSE RCNT=RCNT/UNIT;
    CNT=INCNT-RCNT;

    /*get release count*/
    IF ((RCNT<>0) AND (FIRSTDATE IS NOT NULL)) THEN BEGIN
      SELECT SUM(DOC_PROD.CNT*DOC_PROD.UNIT),
        SUM(DOC_PROD.CNT*DOC_PROD.UNIT*DOC_PROD.PRICE), SUM(DOC_PROD.CNT*DOC_PROD.UNIT*DOC_PROD.NDSPRICE), SUM(DOC_PROD.NALOGSUM)
        FROM DOC_PROD
        LEFT JOIN DOC ON DOC.DOCID=DOC_PROD.DOCID
        WHERE DOC_PROD.INDOCID=:INDOCID AND DOC_PROD.INRECID=:INRECID
        AND DOC.DATE1>=:FIRSTDATE AND (:LASTDATE IS NULL OR DOC.DATE1<=:LASTDATE) 
        AND DOC.KIND=1 /*not inner docs*/ AND DOC.SKIND>0 
        INTO :OUTCNT,:OUTSUM,:OUTNDSSUM,:OUTNALOGSUM;
      IF (OUTCNT IS NULL) THEN OUTCNT=0; ELSE OUTCNT=OUTCNT/UNIT;
      IF (OUTSUM IS NULL) THEN OUTSUM=0;
      IF (OUTNDSSUM IS NULL) THEN OUTNDSSUM=0;
      IF (OUTNALOGSUM IS NULL) THEN OUTNALOGSUM=0;
      INCNT=CNT+OUTCNT;
      IF (CNT+VCNT<-E OR CNT+VCNT>E OR OUTCNT<-E OR OUTCNT>E OR OUTSUM<-E OR OUTSUM>E) THEN SUSPEND;
    END ELSE BEGIN
      OUTCNT=0; OUTSUM=0; OUTNDSSUM=0; OUTNALOGSUM=0;
      IF (CNT+VCNT<-E OR CNT+VCNT>E) THEN SUSPEND;
    END
  END
END
---

ALTER TRIGGER DOC_BEFOREINSERT AS
BEGIN
  IF (NEW.CLIENTID1=NEW.CLIENTID2) THEN EXCEPTION E_UPDATE;
  IF (GEN_ID(GENREG,0)>0) THEN BEGIN IF (GEN_ID(GENREG,1)>5000) THEN EXCEPTION E_REG; END
  /*update doc no*/
  EXECUTE PROCEDURE UPDATE_DOCNO NEW.CLIENTID1,NEW.KIND,NEW.SKIND,NEW.DOCNO,NEW.SUM0,0 RETURNING_VALUES NEW.DOCNO;
  IF (NEW.SUM0 IS NULL) THEN NEW.SUM0=0;
  IF (NEW.KIND<256) THEN BEGIN
    /*update debit*/
    EXECUTE PROCEDURE UPDATE_DEBIT NEW.DOCID,NEW.PDOCID,NEW.CLIENTID1,NEW.CLIENTID2,NEW.SUM0
    RETURNING_VALUES NEW.OST;
  END ELSE BEGIN
    NEW.OST=NEW.SUM0;
  END
END
---

SET TERM ;
---

EXECUTE PROCEDURE GET_VERSION(1);
COMMIT WORK;

